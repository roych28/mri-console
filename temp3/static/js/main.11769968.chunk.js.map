{"version":3,"sources":["theme/icon.font.js","assets/dummy-folder/transport.pdf","reducers/products.js","reducers/doctors.js","reducers/index.js","actions/types.js","store.js","components/utils/dropzone/index.js","components/upload/dicom-viewer/index.js","components/upload/pdf-renderer/index.js","components/upload/index.js","components/home/index.js","components/analysis/index.js","actions/products.js","components/doctors-page/list/index.js","components/navBar/index.js","components/doctors-page/index.js","components/doctor/index.js","components/product/index.js","App.js","serviceWorker.js","index.js","../node_modules/pdfjs-dist/build sync","assets/placeholder.svg"],"names":["module","exports","files","fontName","classPrefix","baseSelector","types","fileName","defaultState","ready","loading","applications","dummyApps","doctorsList","combineReducers","products","state","action","type","payload","doctors","middleware","thunk","store","createStore","rootReducer","applyMiddleware","MyDropzone","props","setFiles","onDrop","useCallback","acceptedFiles","console","log","length","path","endsWith","reader","FileReader","onload","binaryStr","result","readAsDataURL","useDropzone","getRootProps","getInputProps","isDragActive","className","directory","webkitdirectory","multiple","dwv","utils","decodeQuery","base","gui","displayProgress","prog","getElement","refreshElement","image","decoderScripts","jpeg2000","rle","React","forwardRef","ref","Slide","direction","DwvComponent","onChangeTool","tool","dwvApp","setState","selectedTool","currentTarget","value","onReset","onDisplayReset","handleTagsDialogOpen","showDicomTags","handleTagsDialogClose","handleMenuButtonClick","event","toolMenuAnchorEl","handleMenuClose","handleMenuItemClick","versions","getVersion","react","version","tools","loadProgress","dataLoaded","tags","this","classes","onDicomLoad","map","MenuItem","onClick","bind","key","id","Typography","style","display","app","App","init","containerDivId","shapes","isMobile","self","addEventListener","loaded","getTags","document","getElementById","scrollIntoView","Component","withStyles","theme","button","margin","spacing","appBar","position","title","flex","tagsDialog","minHeight","maxHeight","minWidth","maxWidth","iconSmall","fontSize","PDFRenderer","pdfFile","url","scale","scaleStep","maxScale","minScale","navbarOnTop","css","canvasCss","Upload","uploadingStatus","uploadPercentage","uploadingPdfStatus","uploadPdfPercentage","tab","txtFile","reportText","dicomLoaded","onConfirmUpload","findtxtFile","history","setTimeout","push","interval","setInterval","clearInterval","fileType","find","file","renderTxtFile","target","readAsText","disabled","withRouter","Home","Analysis","threats","totalAmmount","scanning","firstAppsArr","secondAppsArr","randomizeIsDetected","decideIsDetected","loadApps","getAppClassNameAndLabel","setAppsAsScanned","sort","a","b","applicationName","localeCompare","forEach","counter","detected","Math","random","indexOf","floor","haveAlreadyScanned","connect","dispatch","async","Placeholder","src","imagePlaceholder","alt","DoctorsItem","doctor","name","academicRanking","division","specialtyAreas","medicalDegree","location","specialty","DoctorsList","NavBar","pathname","to","DoctorsPage","DoctorDetailsPage","clinicalInterests","phone","fax","email","interest","paramDoctorId","match","params","parseInt","PageProduct","vendor","about","logo","introImg","fdaStatus","ceStatus","srcScreenshots","exampleCaseImgs","website","appDescription","featuresAndBenefits","exampleCase","training","dangerouslySetInnerHTML","__html","rel","href","paramApplicationName","product","workflowStage","applicationId","bodyPart","modality","pointOfCare","rating","reviewCount","screenshots","exact","component","Boolean","window","hostname","ReactDOM","render","navigator","serviceWorker","then","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","resolve"],"mappings":"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","file":"static/js/main.11769968.chunk.js","sourcesContent":["module.exports = {\n    files: ['./icons/*.svg'],\n    fontName: 'icons',\n    classPrefix: 'icons-',\n    baseSelector: '.icons',\n    types: ['eot', 'woff', 'woff2', 'ttf', 'svg'],\n    fileName: 'app.[fontname].[hash].[ext]'\n};\n","module.exports = __webpack_public_path__ + \"static/media/transport.565ed0c6.pdf\";","import dummyApps from '../dummy/dummyApps.json';\nimport { APPS_SCANNED } from 'actions/types';\n\nconst defaultState = {\n    ready: false,\n    loading: false,\n    applications: dummyApps\n};\n\nexport default function(state = defaultState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        case APPS_SCANNED:\n            return {\n                ...state,\n                ready: true,\n                loading: false\n            };\n        default:\n            return state;\n    }\n}\n","import dummyDoctors from '../dummy/dummyDoctors.json';\n\nconst defaultState = {\n    ready: false,\n    loading: false,\n    doctorsList: dummyDoctors\n};\n\nexport default function(state = defaultState, action) {\n    const { type, payload } = action;\n\n    switch (type) {\n        default:\n            return state;\n    }\n}\n","import { combineReducers } from 'redux';\nimport products from './products';\nimport doctors from './doctors';\n\nexport default combineReducers({\n    products,\n    doctors\n});\n","export const APPS_SCANNED = 'APPS_SCANNED';\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(rootReducer, initialState, applyMiddleware(...middleware));\n\nexport default store;\n","import React, { useCallback } from 'react';\nimport { useDropzone } from 'react-dropzone';\n\nimport './index.scss';\n\nfunction MyDropzone(props) {\n    const { setFiles } = props;\n    const path = '';\n    const onDrop = useCallback(\n        acceptedFiles => {\n            console.log(acceptedFiles);\n            if (acceptedFiles && acceptedFiles.length > 0) {\n                if (acceptedFiles.length === 1 && acceptedFiles[0].path.endsWith('.pdf')) {\n                    const reader = new FileReader();\n                    reader.onload = () => {\n                        // Do whatever you want with the file contents\n                        const binaryStr = reader.result;\n                        console.log(binaryStr);\n                        setFiles(binaryStr, 'pdf');\n                    };\n                    reader.readAsDataURL(acceptedFiles[0]);\n                    console.log(acceptedFiles);\n                }\n            } else console.log('No files accepted');\n        },\n        [setFiles]\n    );\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({ onDrop });\n\n    return (\n        <div {...getRootProps()} className='dropzone-container'>\n            <input {...getInputProps()} type='file' directory='' webkitdirectory='' multiple={false} />\n            {isDragActive ? (\n                <label className='drop-instruction'>Drop the pdf file here ...</label>\n            ) : (\n                <label className='drop-instruction'>\n                    Drag 'n' drop a PDF file here, or click to select a file\n                </label>\n            )}\n        </div>\n    );\n}\n\nexport default MyDropzone;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Slide from '@material-ui/core/Slide';\n\nimport './index.scss';\nimport dwv from 'dwv';\n\n// gui overrides\n\n// decode query\ndwv.utils.decodeQuery = dwv.utils.base.decodeQuery;\n// progress\ndwv.gui.displayProgress = function(prog) {\n    console.log('Progress', prog);\n};\n// get element\ndwv.gui.getElement = dwv.gui.base.getElement;\n// refresh element\ndwv.gui.refreshElement = dwv.gui.base.refreshElement;\n\n// Image decoders (for web workers)\ndwv.image.decoderScripts = {\n    jpeg2000: 'assets/dwv/decoders/pdfjs/decode-jpeg2000.js',\n    'jpeg-lossless': 'assets/dwv/decoders/rii-mango/decode-jpegloss.js',\n    'jpeg-baseline': 'assets/dwv/decoders/pdfjs/decode-jpegbaseline.js',\n    rle: 'assets/dwv/decoders/dwv/decode-rle.js'\n};\n\nconst styles = theme => ({\n    button: {\n        margin: theme.spacing(1)\n    },\n    appBar: {\n        position: 'relative'\n    },\n    title: {\n        flex: '0 0 auto'\n    },\n    tagsDialog: {\n        minHeight: '90vh',\n        maxHeight: '90vh',\n        minWidth: '90vw',\n        maxWidth: '90vw'\n    },\n    iconSmall: {\n        fontSize: 20\n    }\n});\n\nconst TransitionUp = React.forwardRef((props, ref) => <Slide direction='up' {...props} />);\n\nclass DwvComponent extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            versions: {\n                dwv: dwv.getVersion(),\n                react: React.version\n            },\n            tools: ['Scroll', 'WindowLevel', 'ZoomAndPan', 'Draw'],\n            selectedTool: 'Select Tool',\n            loadProgress: 0,\n            dataLoaded: false,\n            dwvApp: null,\n            tags: [],\n            showDicomTags: false,\n            toolMenuAnchorEl: null\n        };\n    }\n\n    render() {\n        const { classes, onDicomLoad } = this.props;\n        const { versions, tools, loadProgress, dataLoaded, tags, toolMenuAnchorEl } = this.state;\n\n        const toolsMenuItems = tools.map(tool => (\n            <MenuItem onClick={this.handleMenuItemClick.bind(this, tool)} key={tool} value={tool}>\n                {tool}\n            </MenuItem>\n        ));\n\n        return (\n            <div id='dwv'>\n                {/*<div className='button-row'>\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        aria-owns={toolMenuAnchorEl ? 'simple-menu' : null}\n                        aria-haspopup='true'\n                        onClick={this.handleMenuButtonClick}\n                        disabled={!dataLoaded}\n                        className={classes.button}\n                        size='medium'\n                    >\n                        {this.state.selectedTool}\n                        <ArrowDownIcon className={classes.iconSmall} />\n                    </Button>\n                    <Menu\n                        id='simple-menu'\n                        anchorEl={toolMenuAnchorEl}\n                        open={Boolean(toolMenuAnchorEl)}\n                        onClose={this.handleMenuClose}\n                    >\n                        {toolsMenuItems}\n                    </Menu>\n                    <Button variant='contained' color='primary' disabled={!dataLoaded} onClick={this.onReset}>\n                        Reset\n                    </Button>\n\n                    <Button\n                        variant='contained'\n                        color='primary'\n                        onClick={this.handleTagsDialogOpen}\n                        disabled={!dataLoaded}\n                        className={classes.button}\n                        size='medium'\n                    >\n                        Tags\n                    </Button>\n                    <Dialog\n                        open={this.state.showDicomTags}\n                        onClose={this.handleTagsDialogClose}\n                        TransitionComponent={TransitionUp}\n                        classes={{ paper: classes.tagsDialog }}\n                    >\n                        <AppBar className={classes.appBar}>\n                            <Toolbar>\n                                <IconButton\n                                    color='inherit'\n                                    onClick={this.handleTagsDialogClose}\n                                    aria-label='Close'\n                                >\n                                    <CloseIcon />\n                                </IconButton>\n                                <Typography variant='h6' color='inherit' className={classes.flex}>\n                                    DICOM Tags\n                                </Typography>\n                            </Toolbar>\n                        </AppBar>\n                        <TagsTable data={tags} />\n                    </Dialog>\n                </div>*/}\n                <div className='layerContainer'>\n                    <div className='dropBox'>\n                        <Typography>Drag files here.</Typography>\n                    </div>\n                    <canvas className='imageLayer' style={{ display: dataLoaded ? '' : 'none' }}>\n                        Only for HTML5 compatible browsers...\n                    </canvas>\n                    <div className='drawDiv'></div>\n                </div>\n            </div>\n        );\n    }\n\n    componentDidMount() {\n        // create app\n        var app = new dwv.App();\n        // initialise app\n        app.init({\n            containerDivId: 'dwv',\n            tools: this.state.tools,\n            shapes: ['Ruler'],\n            isMobile: false\n        });\n        // progress\n        const self = this;\n        app.addEventListener('load-progress', function(event) {\n            console.log(event);\n            self.setState({ loadProgress: event.loaded });\n        });\n        app.addEventListener('load-end', function(event) {\n            // set data loaded flag\n            self.setState({ dataLoaded: true });\n            // set dicom tags\n            self.setState({ tags: app.getTags() });\n            // set the selected tool\n\n            // if (app.isMonoSliceData() && app.getImage().getNumberOfFrames() === 1) {\n            //     self.setState({ selectedTool: 'ZoomAndPan' });\n            // } else {\n            self.setState({ selectedTool: 'Scroll' });\n            // }\n            self.props.onDicomLoad();\n            const dwvElement = document.getElementById('dwv');\n            dwvElement.scrollIntoView(true);\n        });\n        console.log(app);\n        // store\n        this.setState({ dwvApp: app });\n    }\n\n    onChangeTool = tool => {\n        if (this.state.dwvApp) {\n            this.setState({ selectedTool: tool });\n            this.state.dwvApp.onChangeTool({ currentTarget: { value: tool } });\n        }\n    };\n\n    onReset = tool => {\n        if (this.state.dwvApp) {\n            this.state.dwvApp.onDisplayReset();\n        }\n    };\n\n    handleTagsDialogOpen = () => {\n        this.setState({ showDicomTags: true });\n    };\n\n    handleTagsDialogClose = () => {\n        this.setState({ showDicomTags: false });\n    };\n\n    handleMenuButtonClick = event => {\n        this.setState({ toolMenuAnchorEl: event.currentTarget });\n    };\n\n    handleMenuClose = event => {\n        this.setState({ toolMenuAnchorEl: null });\n    };\n\n    handleMenuItemClick = tool => {\n        this.setState({ toolMenuAnchorEl: null });\n        this.onChangeTool(tool);\n    };\n}\n\nDwvComponent.propTypes = {\n    classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(DwvComponent);\n","import React from 'react';\nimport PDFViewer from 'pdf-viewer-reactjs';\n\nimport './index.scss';\n\nconst PDFRenderer = props => {\n    const { pdfFile } = props;\n    console.log(pdfFile);\n    return (\n        <PDFViewer\n            document={{\n                url: pdfFile\n            }}\n            scale={0.95}\n            scaleStep={0.1}\n            maxScale={1.05}\n            minScale={0.6}\n            navbarOnTop\n            css='customViewer'\n            canvasCss='customCanvas'\n            // navigation={{\n            //     css: {\n            //         navbarWrapper: 'navBarWrapper'\n            //     }\n            // }}\n        />\n    );\n};\n\nexport default PDFRenderer;\n","import React, { Component } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport PDFViewer from 'pdf-viewer-reactjs';\n\n// import { ReactComponent as fileSvg } from '../../theme/icons/icon_file.svg';\nimport './index.scss';\nimport MyDropzone from '../utils/dropzone';\nimport DwvComponent from './dicom-viewer';\nimport PDFRenderer from './pdf-renderer';\nimport pdfExample from 'assets/dummy-folder/transport.pdf';\n\nclass Upload extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            uploadingStatus: 1,\n            uploadPercentage: 70,\n            uploadingPdfStatus: 1,\n            uploadPdfPercentage: 70,\n            tab: 2,\n            files: [],\n            txtFile: null,\n            pdfFile: null,\n            reportText: 'No report yet',\n            dicomLoaded: false\n        };\n\n        this.setFiles = this.setFiles.bind(this);\n        this.onConfirmUpload = this.onConfirmUpload.bind(this);\n        this.findtxtFile = this.findtxtFile.bind(this);\n    }\n\n    componentDidUpdate() {\n        const { uploadPercentage } = this.state;\n        const { history } = this.props;\n\n        if (uploadPercentage === 100) {\n            setTimeout(() => {\n                history.push('/analysis');\n            }, 300);\n        }\n    }\n\n    onConfirmUpload(type) {\n        if (type === 'dicom') {\n            this.setState({ uploadingStatus: 3 });\n            const interval = setInterval(() => {\n                const { uploadPercentage } = this.state;\n                this.setState({ uploadPercentage: uploadPercentage + 1 });\n                if (uploadPercentage === 99) clearInterval(interval);\n            }, 120);\n        } else if (type === 'pdf') {\n            this.setState({ uploadingPdfStatus: 3 });\n            const interval = setInterval(() => {\n                const { uploadPdfPercentage } = this.state;\n                this.setState({ uploadPdfPercentage: uploadPdfPercentage + 1 });\n                if (uploadPdfPercentage === 99) clearInterval(interval);\n            }, 120);\n        }\n    }\n\n    setFiles(acceptedFiles, fileType) {\n        const { uploadingStatus } = this.state;\n        console.log('ACCEPTED FILES:', acceptedFiles);\n        if (uploadingStatus === 1 && fileType === 'txt') {\n            // Pending\n            this.setState({ uploadingStatus: 2, files: acceptedFiles });\n            this.findtxtFile();\n            console.log('State files:', this.state.files);\n            return; // Set the confirm stage\n        } else if (uploadingStatus === 1 && fileType === 'pdf') {\n            this.setState({ uploadingPdfStatus: 2, pdfFile: acceptedFiles });\n        }\n    }\n\n    findtxtFile() {\n        const { files } = this.state;\n        const txtFile = files.find(file => file.path.endsWith('.txt'));\n        if (txtFile) {\n            this.setState({ txtFile });\n            this.renderTxtFile();\n        }\n        console.log(this.state.txtFile);\n    }\n\n    renderTxtFile() {\n        const { txtFile } = this.state;\n        let reader = new FileReader();\n        reader.onload = event => {\n            this.setState({ reportText: event.target.result });\n        };\n        reader.readAsText(txtFile);\n    }\n\n    render() {\n        const {\n            uploadingStatus,\n            uploadPercentage,\n            uploadingPdfStatus,\n            uploadPdfPercentage,\n            tab,\n            reportText,\n            pdfFile,\n            dicomLoaded\n        } = this.state;\n        console.log('Tab: ', tab);\n        console.log('Report Text:', reportText);\n        console.log('Uploading Status:', uploadingStatus);\n        return (\n            <div className='upload-container'>\n                <div className='tabs'>\n                    {/*<p className={`tab ${tab === 1 ? 'active' : ''}`} onClick={() => this.setState({ tab: 1 })}>\n                        FILE\n        </p>*/}\n                    <p\n                        className={`tab ${tab === 2 ? 'active' : ''}`}\n                        disabled={uploadingStatus !== 2}\n                        onClick={() => this.setState({ tab: 2 })}\n                    >\n                        DICOM\n                    </p>\n                    <p\n                        className={`tab ${tab === 3 ? 'active' : ''}`}\n                        disabled={uploadingStatus !== 2}\n                        onClick={() => this.setState({ tab: 3 })}\n                    >\n                        REPORT\n                    </p>\n                </div>\n                <div className='upload-container-body'>\n                    {/*<div className='body-tab-1' style={{ display: tab === 1 ? 'block' : 'none' }}>\n                        <div className='fa fa-file-o fa-3x img' />\n                        {uploadingStatus === 1 ? (\n                            <MyDropzone className='dropzone' setFiles={this.setFiles} />\n                        ) : uploadingStatus === 2 ? (\n                            <p className='upload-btn' onClick={this.onConfirmUpload}>\n                                Confirm Upload\n                            </p>\n                        ) : (\n                            <p className='upload-btn filled'>Uploading {uploadPercentage}%</p>\n                        )}\n                        </div>*/}\n                    <div className='body-tab-2' style={{ display: tab === 2 ? 'flex' : 'none' }}>\n                        <DwvComponent onDicomLoad={() => this.setState({ uploadingStatus: 2 })} />\n                        {uploadingStatus === 2 ? (\n                            <p\n                                className='upload-btn'\n                                onClick={() => this.onConfirmUpload('dicom')}\n                                style={{ display: uploadingStatus === 2 ? 'flex' : 'none' }}\n                            >\n                                Confirm DICOM\n                            </p>\n                        ) : (\n                            <p\n                                className='upload-btn filled'\n                                style={{ display: uploadingStatus === 3 ? 'flex' : 'none' }}\n                            >\n                                Analyzing {uploadPercentage}%\n                            </p>\n                        )}\n                    </div>\n                    <div className='body-tab-3' style={{ display: tab === 3 ? 'flex' : 'none' }}>\n                        {uploadPdfPercentage !== 100 ? (\n                            <div className='body-tab-3-upload'>\n                                <div className='fa fa-file-o fa-3x img' />\n                                {uploadingPdfStatus === 1 ? (\n                                    <MyDropzone className='dropzone' setFiles={this.setFiles} />\n                                ) : uploadingPdfStatus === 2 ? (\n                                    <p className='upload-btn' onClick={() => this.onConfirmUpload('pdf')}>\n                                        Confirm Upload\n                                    </p>\n                                ) : (\n                                    <p className='upload-btn filled'>Uploading {uploadPdfPercentage}%</p>\n                                )}\n                            </div>\n                        ) : (\n                            <PDFRenderer pdfFile={pdfFile} />\n                        )}\n                    </div>\n                    <p className='footer' style={{ display: tab === 3 ? 'none' : 'flex' }}>\n                        By submitting your file to CT-Total you are asking CT-Total to share your submission with\n                        the security community and agree to our Terms of Service and Privacy Policy.\n                    </p>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default withRouter(Upload);\n","import React, { Component } from 'react';\n\nimport Upload from '../upload';\nimport './index.scss';\n\nclass Home extends Component {\n    render() {\n        return (\n            <div className='home'>\n                <div className='title-container'>\n                    <div className='title-with-img'>\n                        <div className='fa fa-user-md fa-4x img'></div>\n                        <div className='title'>CTTOTAL</div>\n                    </div>\n                    <p className='description'>Analyze CT files to detect types of injuries &amp; diseases</p>\n                </div>\n                <div className='card'>\n                    <Upload />\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Home;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n\nimport { setAppsAsScanned } from 'actions/products';\nimport './index.scss';\n\nclass Analysis extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            threats: 0,\n            totalAmmount: this.props.applications.length,\n            // scanned: 0,\n            scanning: true,\n            firstAppsArr: [],\n            secondAppsArr: []\n        };\n\n        // this.scanThreats = this.scanThreats.bind(this);\n        this.randomizeIsDetected = this.randomizeIsDetected.bind(this);\n        this.decideIsDetected = this.decideIsDetected.bind(this);\n        this.loadApps = this.loadApps.bind(this);\n        this.getAppClassNameAndLabel = this.getAppClassNameAndLabel.bind(this);\n    }\n\n    componentDidMount() {\n        console.log('Analysis DidMount, Applications:', this.props.applications);\n        const { setAppsAsScanned } = this.props;\n        // this.scanThreats();\n        this.props.applications.sort((a, b) => a.applicationName.localeCompare(b.applicationName));\n        this.props.applications.forEach(app => this.decideIsDetected(app));\n        this.loadApps();\n    }\n\n    loadApps() {\n        const { ready, applications, setAppsAsScanned } = this.props;\n        let counter = 0;\n        const intervalTime = ready ? 0 : 800;\n        const interval = setInterval(() => {\n            if (counter < applications.length / 2) {\n                this.setState({ firstAppsArr: [...this.state.firstAppsArr, applications[counter]] });\n            } else if (counter < applications.length) {\n                this.setState({ secondAppsArr: [...this.state.secondAppsArr, applications[counter]] });\n            } else {\n                clearInterval(interval);\n                this.setState({ scanning: false });\n                setAppsAsScanned();\n            }\n            counter++;\n        }, intervalTime);\n        // interval();\n\n        // const firstAppsArr = this.props.applications.slice(0, this.props.applications.length / 2 + 1);\n        // const secondAppsArr = this.props.applications.slice(\n        //     this.props.applications.length / 2 + 1,\n        //     this.props.applications.length\n        // );\n    }\n\n    // scanThreats() {\n    //     const { totalAmmount } = this.state;\n\n    //     const interval = setInterval(() => {\n    //         const { scanned } = this.state;\n    //         this.setState({ scanned: scanned + 1 });\n    //         if (scanned === totalAmmount) {\n    //             this.setState({ scanning: false });\n    //             clearInterval(interval);\n    //         }\n    //     }, 1500);\n    // }\n\n    randomizeIsDetected(app) {\n        app.detected = Math.random() * 100 < 90 ? false : true;\n        return app.detected;\n    }\n\n    decideIsDetected(app) {\n        if (\n            app.applicationName === 'Heartbeat Calcium Scoring' ||\n            app.applicationName === 'CT Lung Nodule Assessment (LNA)' ||\n            app.applicationName === 'MR Liver Health'\n        )\n            app.detected = true;\n        else app.detected = false;\n    }\n\n    getAppClassNameAndLabel(app, type) {\n        const { applications } = this.props;\n        const { firstAppsArr } = this.state;\n        if (type === 'class') {\n            if (\n                applications.length % 2 === 1 &&\n                firstAppsArr.indexOf(app) === firstAppsArr.length - 1 &&\n                firstAppsArr.indexOf(app) !== Math.floor(applications.length / 2)\n            )\n                return 'fa fa-hourglass-start';\n            else if (\n                applications.length % 2 === 0 &&\n                firstAppsArr.indexOf(app) === firstAppsArr.length - 1 &&\n                firstAppsArr.indexOf(app) !== Math.floor(applications.length / 2 - 1)\n            )\n                return 'fa fa-hourglass-start';\n            else if (!app.detected) return 'fa fa-check-circle-o';\n            else return 'fa fa-times-circle-o';\n        } else {\n            if (\n                applications.length % 2 === 1 &&\n                firstAppsArr.indexOf(app) === firstAppsArr.length - 1 &&\n                firstAppsArr.indexOf(app) !== Math.floor(applications.length / 2)\n            )\n                return 'Calculating..';\n            else if (\n                applications.length % 2 === 0 &&\n                firstAppsArr.indexOf(app) === firstAppsArr.length - 1 &&\n                firstAppsArr.indexOf(app) !== Math.floor(applications.length / 2 - 1)\n            )\n                return 'Calculating..';\n            else if (!app.detected) return 'Undetected';\n            else return 'Detected';\n        }\n    }\n\n    render() {\n        const { threats, totalAmmount, scanning, firstAppsArr, secondAppsArr } = this.state;\n        const { ready: haveAlreadyScanned, applications, history } = this.props;\n        console.log('Have apps already scanned before:', haveAlreadyScanned);\n        return (\n            <div className='analysis-body'>\n                <div className='top-container'>\n                    <div className='spinner-container'>\n                        <div\n                            className={`fa ${\n                                scanning ? 'fa-spin fa-circle-o-notch' : 'fa-circle-o'\n                            } fa-fw spin-img`}\n                        ></div>\n                        <label className='threats'>{threats}</label>\n                        <label className='total'>/ {totalAmmount}</label>\n                        <div className='score-container'>\n                            <div className='fa fa-question-circle grey-img' />\n                            <div className='lines'>\n                                <div className='line red'></div>\n                                <div className='line green'></div>\n                            </div>\n                            <div className='under-the-line'>\n                                <i className='fa fa-times-circle grey-img' />\n                                <label className='community-scr'>\n                                    Community <br />\n                                    Score\n                                </label>\n                                <i className='fa fa-check-circle grey-img' />\n                            </div>\n                        </div>\n                        <div className='description'></div>\n                    </div>\n                    <div className='file-desc-box'>\n                        <div className='desc-header'>\n                            <div className='one-side'>\n                                <li className='fa fa-check-circle-o' />\n                                <label>No engines detected this file</label>\n                            </div>\n                            <button\n                                className='second-opinion-redirect one-side'\n                                onClick={() => {\n                                    history.push('/doctors');\n                                }}\n                            >\n                                Second Opinion\n                            </button>\n                        </div>\n                        <div className='desc-body'>\n                            <div className='names'>\n                                <label>9dce7acd0d1ce10d8f375d3d19b443196cde674d9debe1150f3a58703937f1d5</label>\n                                <label>Screen Shot 2019-11-26 at 12.51.12.zip</label>\n                                <label className='circled'>zip</label>\n                            </div>\n                            <div className='column size'>\n                                <label>120.07 KB</label>\n                                <label className='weak'>Size</label>\n                            </div>\n                            <div className='column date-uploaded'>\n                                <label>2019-12-09 11:59:09 UTC</label>\n                                <label className='weak'>a moment ago</label>\n                            </div>\n                            <div className='column file-type'>\n                                <div className='fa fa-file-archive-o' />\n                                <label>ZIP</label>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div className='apps-list'>\n                    <div className='apps-list-header'>\n                        <div className='tab active'>Detection</div>\n                    </div>\n                    {applications.length > 10 ? (\n                        <div className='table-container'>\n                            <div className='table-body'>\n                                {firstAppsArr.map(app => {\n                                    return (\n                                        <div key={app.id} className='table-row not-bordered-right'>\n                                            <label\n                                                className='app-name'\n                                                onClick={() =>\n                                                    history.push(`/applications/${app.applicationName}`)\n                                                }\n                                            >\n                                                {app.applicationName}\n                                            </label>\n                                            <li className={this.getAppClassNameAndLabel(app, 'class')}></li>\n                                            <label className='detected-label'>\n                                                {this.getAppClassNameAndLabel(app, 'label')}\n                                            </label>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                            <div className='table-body'>\n                                {secondAppsArr.map(app => {\n                                    return (\n                                        <div key={app.id} className='table-row not-bordered-left'>\n                                            <label\n                                                className='app-name'\n                                                onClick={() =>\n                                                    history.push(`/applications/${app.applicationName}`)\n                                                }\n                                            >\n                                                {app.applicationName}\n                                            </label>\n                                            <li\n                                                className={`${\n                                                    secondAppsArr.indexOf(app) === secondAppsArr.length - 1 &&\n                                                    applications.indexOf(app) !== applications.length - 1\n                                                        ? 'fa fa-hourglass-start'\n                                                        : !app.detected\n                                                        ? 'fa fa-check-circle-o'\n                                                        : 'fa fa-times-circle-o'\n                                                }`}\n                                            ></li>\n                                            <label className='detected-label'>\n                                                {secondAppsArr.indexOf(app) === secondAppsArr.length - 1 &&\n                                                applications.indexOf(app) !== applications.length - 1\n                                                    ? 'Calculating..'\n                                                    : app.detected === false\n                                                    ? 'Undetected'\n                                                    : 'Detected'}\n                                            </label>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    ) : (\n                        <div className='table-container'>\n                            <div className='table-body'>\n                                {applications.map(app => {\n                                    return (\n                                        <div key={app.id} className='table-row'>\n                                            <label\n                                                className='app-name'\n                                                onClick={() =>\n                                                    history.push(`/applications/${app.applicationName}`)\n                                                }\n                                            >\n                                                {app.applicationName}\n                                            </label>\n                                            <li\n                                                className={`${\n                                                    !app.detected ? 'fa fa-check-circle-o' : 'fa fa-times-circle-o'\n                                                }`}\n                                            ></li>\n                                            <label className='detected-label'>\n                                                {app.detected === false ? 'Undetected' : 'Detected'}\n                                            </label>\n                                        </div>\n                                    );\n                                })}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ products: { ready, applications } }) => ({\n    ready,\n    applications\n});\n\nexport default connect(mapStateToProps, { setAppsAsScanned })(Analysis);\n","import { APPS_SCANNED } from './types';\n\nexport const setAppsAsScanned = () => async dispatch => {\n    dispatch({\n        type: APPS_SCANNED\n    });\n};\n","import React from 'react';\n\nimport imagePlaceholder from '../../../assets/placeholder.svg';\nimport './index.scss';\n\nconst Placeholder = () => (\n    <div className='placeholder-wrapper'>\n        <div className='placeholder'>\n            <div className='placeholder-sprite-wrapper'>\n                <img src={imagePlaceholder} alt='placeholder' />\n            </div>\n            <div className='placeholder-label'>\n                <div className='placeholder-gradient' />\n                <div className='placeholder-label-1'>There are no second opinions right now</div>\n                <div className='placeholder-label-2'>Stay updated</div>\n            </div>\n        </div>\n    </div>\n);\n\nclass DoctorsItem extends React.Component {\n    render() {\n        const {\n            id,\n            name,\n            academicRanking,\n            division,\n            specialtyAreas,\n            medicalDegree,\n            location,\n            image\n        } = this.props.doctor;\n        const { history } = this.props;\n        console.log(image);\n        console.log(this.props);\n        return (\n            <li className='doctor-wrapper'>\n                <div className='doctor'>\n                    <div className='header'>\n                        <div className='logo-container' onClick={() => history.push(`/doctors/${id}`)}>\n                            <div className='logo'>\n                                <img src={image} alt='Doctor Logo' />\n                            </div>\n                        </div>\n                        <div className='field name'>{name}</div>\n                    </div>\n                    <div className='field division'>\n                        <label className='field-name'>Academic Ranking:</label> {academicRanking}\n                    </div>\n                    <div className='field division'>\n                        <label className='field-name'>Division:</label> {division}\n                    </div>\n                    <div className='field medical-degree'>\n                        <label className='field-name'>Medical Degree: </label>\n                        {medicalDegree}\n                    </div>\n                    <div className='field location'>\n                        <label className='field-name'>Location:</label>\n                        {location}\n                    </div>\n                    <ul className='field specialities'>\n                        <label className='field-name'>Specialty Areas:</label>\n                        {specialtyAreas.map(specialty => (\n                            <li className='specialty' key={specialtyAreas.indexOf(specialty) + 1}>\n                                &#9642; {specialty}\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            </li>\n        );\n    }\n}\n\nclass DoctorsList extends React.Component {\n    render() {\n        const { doctorsList, history } = this.props;\n        console.log(this.props);\n        return doctorsList && doctorsList.length ? (\n            <div id='doctors-list'>\n                <ul>\n                    {doctorsList.map(doctor => {\n                        return <DoctorsItem key={doctor.id} doctor={doctor} history={history} />;\n                    })}\n                </ul>\n            </div>\n        ) : (\n            <div id='doctors-list'>\n                <Placeholder />\n            </div>\n        );\n    }\n}\n\nexport default DoctorsList;\n","import React from 'react';\nimport { Link, withRouter } from 'react-router-dom';\n\nimport './index.scss';\n\nclass NavBar extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('Doctors Page');\n    }\n\n    render() {\n        const {\n            location: { pathname }\n        } = this.props;\n        return (\n            <header>\n                <nav className='title'>\n                    <Link to='/'>Ct Total</Link>\n                </nav>\n                <nav className='breadcrumb'>\n                    <Link className={pathname === '/analysis' ? 'selected' : ''} to='/analysis'>\n                        Analysis\n                    </Link>\n                    <Link className={pathname === '/doctors' ? 'selected' : ''} to='/doctors'>\n                        Second Opinion\n                    </Link>\n                </nav>\n            </header>\n        );\n    }\n}\n\nexport default withRouter(NavBar);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport DoctorsList from './list';\nimport NavBar from 'components/navBar';\n\nimport './index.scss';\n\nclass DoctorsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('Doctors Page');\n    }\n\n    render() {\n        const { history, doctorsList } = this.props;\n        return (\n            <div id='page-doctors'>\n                <NavBar />\n                <div id='page-doctors-body' className={`app-body ${doctorsList && doctorsList.length ? '' : 'placeholder-body'}`}>\n                    <DoctorsList history={history} doctorsList={doctorsList} />\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = ({ doctors: { doctorsList } }) => ({ doctorsList });\n\nexport default connect(mapStateToProps)(DoctorsPage);\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport NavBar from 'components/navBar';\n\nimport './index.scss';\n\nclass DoctorDetailsPage extends React.Component {\n    constructor(props) {\n        super(props);\n        console.log('Doctor Details Page');\n    }\n\n    render() {\n        const {\n            name,\n            academicRanking,\n            division,\n            specialtyAreas,\n            medicalDegree,\n            clinicalInterests,\n            location,\n            image,\n            phone,\n            fax,\n            email\n        } = this.props;\n        console.log(name, academicRanking);\n        return (\n            <div id='page-doctor'>\n                <NavBar />\n                <div id='page-doctor-body' className='app-body'>\n                    <div id='block-body' className='page-block'>\n                        <div className='page-block-content'>\n                            <div className='column content'>\n                                <div className='doctor-header'>\n                                    <div className='title-wrapper'>\n                                        <div className='title'>{name}</div>\n                                        <div className='vendor'>{academicRanking}</div>\n                                    </div>\n                                </div>\n                                <div className='block clinical-interests'>\n                                    <h1>Clinical Interests</h1>\n                                    <ul>\n                                        {clinicalInterests.map(interest => (\n                                            <li className='interest'>&#9642; {interest}</li>\n                                        ))}\n                                    </ul>\n                                </div>\n                                <div className='block education'>\n                                    <h1>Education And Training:</h1>\n                                    <ul>\n                                        <li className='training'>&#9642; Medical School: {medicalDegree}</li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className='column subcontent'>\n                                <div className='doctor-img'>\n                                    <img src={image} alt='doctor' />\n                                </div>\n                                <div className='block contact'>\n                                    <label className='title'>Contact</label>\n                                    <div className='fields'>\n                                        <label className='field'>Phone: {phone}</label>\n                                        <label className='field'>Fax: {fax}</label>\n                                        <label className='field'>E-mail: {email}</label>\n                                        <label className='field'>Office: {location}, 12th floor</label>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (\n    { doctors: { doctorsList } },\n    {\n        match: {\n            params: { id: paramDoctorId }\n        }\n    }\n) => {\n    console.log(paramDoctorId);\n    console.log(doctorsList);\n    const doctor = doctorsList.find(doctor => doctor.id === parseInt(paramDoctorId));\n    const {\n        name,\n        academicRanking,\n        division,\n        specialtyAreas,\n        medicalDegree,\n        clinicalInterests,\n        location,\n        image,\n        phone,\n        fax,\n        email\n    } = doctor;\n    return {\n        name,\n        academicRanking,\n        division,\n        specialtyAreas,\n        medicalDegree,\n        clinicalInterests,\n        location,\n        image,\n        phone,\n        fax,\n        email\n    };\n};\n\nexport default connect(mapStateToProps)(DoctorDetailsPage);\n","import React from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\n\nimport './index.scss';\nimport NavBar from 'components/navBar';\n\nclass PageProduct extends React.Component {\n    constructor(props) {\n        super(props);\n    }\n    render() {\n        const {\n            vendor,\n            about,\n            logo,\n            fdaStatus,\n            ceStatus,\n            srcScreenshots,\n            introImg,\n            exampleCaseImgs,\n            website,\n            appDescription,\n            featuresAndBenefits,\n            exampleCase,\n            training,\n            applicationName\n        } = this.props;\n        return (\n            <div id='page-product' className='app-body'>\n                <NavBar />\n                <div id='block-body' className='page-block'>\n                    <div className='page-block-content'>\n                        <div className='column content'>\n                            <div className='header'>\n                                <div className='title-wrapper'>\n                                    <div className='title'>{applicationName}</div>\n                                    <div className='vendor'>{vendor}</div>\n                                </div>\n                            </div>\n                            <div className='block about'>\n                                <p dangerouslySetInnerHTML={{ __html: about }} />\n                                {introImg && introImg.length && introImg[0] !== '' ? (\n                                    <div className='block image'>\n                                        <img src={introImg} alt='' />\n                                    </div>\n                                ) : (\n                                    ''\n                                )}\n                            </div>\n                            <div className='block'>\n                                <h1>Application Description</h1>\n                                <p dangerouslySetInnerHTML={{ __html: appDescription }} />\n                            </div>\n                            <div className='block'>\n                                <h1>Features &amp; Benefits</h1>\n                                <p dangerouslySetInnerHTML={{ __html: featuresAndBenefits }} />\n                            </div>\n                            <div className='block'>\n                                <h1>Example Case</h1>\n                                <p dangerouslySetInnerHTML={{ __html: exampleCase }} />\n                                <div className='block image'>\n                                    <img src={exampleCaseImgs} alt='' />\n                                </div>\n                            </div>\n                            <div className='block'>\n                                <h1>Background on Training, Validation &amp; Publication</h1>\n                                <p dangerouslySetInnerHTML={{ __html: training }} />\n                            </div>\n                        </div>\n                        <div className='column subcontent'>\n                            <div className='logo'>\n                                <img src={logo} alt='logo' />\n                            </div>\n                            <a className='link' target='_blank' rel='noopener noreferrer' href={website}>\n                                {website}\n                            </a>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (\n    { products: { applications } },\n    {\n        match: {\n            params: { applicationName: paramApplicationName }\n        }\n    }\n) => {\n    const product = applications.find(({ applicationName }) => applicationName === paramApplicationName);\n    const {\n        workflowStage,\n        appDescription,\n        featuresAndBenefits,\n        exampleCase,\n        training,\n        bodyPart,\n        modality,\n        pointOfCare,\n        id: applicationId,\n        vendor,\n        rating,\n        reviewCount,\n        about,\n        logo,\n        ceStatus,\n        fdaStatus,\n        screenshots: [srcScreenshots],\n        introImg,\n        exampleCaseImgs,\n        website,\n        applicationName\n    } = product;\n    return {\n        vendor,\n        rating,\n        reviewCount,\n        about,\n        logo,\n        fdaStatus,\n        ceStatus,\n        srcScreenshots,\n        introImg,\n        exampleCaseImgs,\n        website,\n        featuresAndBenefits,\n        exampleCase,\n        training,\n        appDescription,\n        applicationName,\n        applicationId\n    };\n};\n\nexport default withRouter(connect(mapStateToProps)(PageProduct));\n","import React from 'react';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\nimport store from './store';\nimport Home from './components/home';\nimport Analysis from './components/analysis';\nimport DoctorsPage from './components/doctors-page';\nimport DoctorDetailsPage from './components/doctor';\nimport PageProduct from './components/product';\n\nimport './App.scss';\n\nfunction App() {\n    return (\n        <Provider store={store}>\n            <Router>\n                <div className='app-router'>\n                    <Route path='/' exact component={Home} />\n                    <Route path='/analysis' exact component={Analysis} />\n                    <Route path='/doctors' exact component={DoctorsPage} />\n                    <Route path='/doctors/:id' exact component={DoctorDetailsPage} />\n                    <Route path='/applications/:applicationName' exact component={PageProduct} />\n                </div>\n            </Router>\n        </Provider>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './theme/icon.font.js';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 44;","module.exports = __webpack_public_path__ + \"static/media/placeholder.c532a2f1.svg\";"],"sourceRoot":""}